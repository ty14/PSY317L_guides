[
["introduction.html", "2 Introduction 2.1 Downloading R 2.2 Downloading RStudio 2.3 Using RCloud instead of RStudio 2.4 The RStudio Environment 2.5 The Command Prompt 2.6 What is an RScript File? 2.7 What are Packages 2.8 Project Folders and Working Directories 2.9 Quitting R", " 2 Introduction How to get started with R and Rstudio. The initial steps are downloading and installing R. This may differ slightly based on your machine. ## -- Attaching packages ------------------------------------------------------------------------ tidyverse 1.3.0 -- ## v ggplot2 3.3.2 v purrr 0.3.3 ## v tibble 3.0.0 v dplyr 0.8.5 ## v tidyr 1.0.2 v stringr 1.4.0 ## v readr 1.3.1 v forcats 0.5.0 ## -- Conflicts --------------------------------------------------------------------------- tidyverse_conflicts() -- ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() 2.1 Downloading R Go to the R website. The first box has options for downloading R for Mac, Windows or Linux. Click on the appropriate link. R for Windows You will want to click on \\(\\color{blue}{\\text{&quot;install R for the first time&quot;}}\\). Then follow the instructions. R for Mac OS X You will want to click on \\(\\color{blue}{\\text{&quot;R-4.0.2.pkg&quot;}}\\). Then follow the instructions. 2.2 Downloading RStudio Go to the Rstudio website. Click DOWNLOAD under RStudio Desktop, open source license FREE. Then click on the appropriate installer for your computer (Mac, Windows, or Linux).Run the installer and follow the instructions. R for Windows You will want to click on the first link \\(\\color{blue}{\\text{&quot;RStudio-1.3.1056.exe&quot;}}\\). R for Mac OS X You will want to click on the second link \\(\\color{blue}{\\text{&quot;RStudio-1.3.1056.dmg&quot;}}\\). You will always use Rstudio, when working with data. 2.3 Using RCloud instead of RStudio RCloud RCloud is a web-based platform for Rstudio, which allows you to perform all visualization and analysis with your data, without downloading Rstudio on to your machine. Professor Curley will email you during the first week of class with an invitation link to the PSY317L project on RCloud. Remember you only need to use RCloud if you do not have Rstudio available on your machine. Here is what the invitation link will look like: Once you click on the link, you will need to create an account. Please fill in the all section with your own information. RCloud will then prompt you to create a display name for you to go by, remember everyone can see this name so try to make it identifiable and appropriate. After, you enter your display name you will have full excess to the PSY317L project on RCloud. Now that you have the RCloud setup with full access to the PSY317L project, you will be able to perform all exercise you will need to complete for class. This is your own work space and changes here can not be seen by classmates. Remember, you will not be able to save all changes to R scripts that are already in the project. However, you could create new Rscripts and save all your code there. 2.4 The RStudio Environment You Rstudio enviornment is separated into 4 main panes. On your machine these panes by be organized differently. You can also change the order of these panes by going your tools tab, then clicking Global preferences. First, in the top left, you have a source pane - or script. This is where you will be writing most of your code. You will have to run the code, before seeing the output in the console. These pane is important because this is where you can write and save code for future use. Second, on the bottom left, there is the Console. All of the script’s output will be assess and found in the console. However, objects in the console will not be saved. You can also, type right in the console for fast calculations, like this: 4+5 ## [1] 9 Third, you have a Gobal Environment and History in the top right. Your gobal environment will display all the names of objects you defined in your script. Here is an example of a Gobal Environment where you can see dataframes, matrices, values, and functions: If you click the play arrow next to the dataframe, you can view the entire dataframe. This is the save as running the function View(df). Another, important button is the broom icon, if you click this it will clear your gobal enviornment and you will have to rerun code to get any dataframes, function, etc. back. In the History tab, you can see all the code that was once ran through your console. This tab can be important, because as I said before information in the console is never saved and can be deleted easily. Nevertheless, you should get use to saving your code in R scripts, so you will probably not use this tab to often. The fourth pane, is the most compacted and has tabs for files, plots, packages, and help. The file tab, allows you access all files on your hard drive. The Plot tab, will be filled with plots generated from your code. There are puttons right under the tab to Zoom and Export plots. There is also a button which looks like a broom, this will clear the plots. The Packages tab, has a User Library which is just a list of all the packages you already have install on your machine. You can also install a package, by hitting the install button and then search for your wanted package. The update button will update all packages you already have installed. The Help tab, will give you information to help understand different functions and commands in R. You can also call for help with a function right from the console like this: ?t.test 2.5 The Command Prompt There are several ways to run the code in your script file. You can highlight your code, then hit ‘Run’ in the top right corner of the script file. You can click anywhere on the code, then hit ‘Run’ You can highlight or click on the code you want to run, then use the keyboard shortcut with is “Command + Return” on Mac, or “Control + Enter” on PC 2.6 What is an RScript File? In R, you can code run in the console and a Rscript. In the console, the bottom left panel, you type commands and run them by hitting Enter on your keyboard. R will show the results in the console as well. All code and results will be forgotten when the R session is close. This is why it is better to you use Rscripts. To open new Rscripts you can: 1. click on File -&gt; New File -&gt; R Script 2. click on the white sheet with green plus sign right under file in your Rstudio environment 3. hit “Ctrl”+ “Shift” + “N” on your keyboard. In Rscripts, you can type commands and then run. The results from these commands will still end up in the console, however you will be able to save these Rscripts by hitting file -&gt; Save As… anywhere on your computer. This allows you to come back later to finish working on some assignment even after you have closed the R session. You can also write notes in Rscripts about your data. Any line of code/text with a # infront, R knows not to recognize as a command to run. For the sake of this class, you are going to want to save all Rscripts in the PSY317L project folder on your computer. This way all of the datasets you will be working with will be in the same folder. 2.7 What are Packages When working with R, you will hear about different packages that we will utilize to complete a varity of tasks. A package is a collection of code, functions, and sometimes data sets development by others organize and share their work with others. Packages include functions and documentation for others to use to help solve common problem when working with data. You can also create your own package! There are packages to help tidy data, for visualization, and many different packages for analyzing data. There are two ways to download packages on to your computer. The first way is through the Packages tab in the right bottom panel in your Rstudio enviornment. In this tab you will see all the packages already installed on your machine. Here if you click on install, a box will pop up and your can enter the name of the package you wish to to have then hit install. The second way is through one line of code you can write in the console: install.package(\"tidyverse\") To have all the packages you will need for this class on your machine, please copy and paste the following code in your console and hit enter: install.packages(c(\"car\", \"cion\", \"gridExtra\", \"lsr\", \"moments\", \"ppcor\", \"psych\", \"rcompanion\", \"tidyverse\")) Your Console should look like this 2.8 Project Folders and Working Directories how projects and folders are managed. The top level of the the project folder is the one that contains all the folders and looks like this: This is where R will automatically look for files when you ask it to find stuff….. and how to refer to folders… e.g. data/cheese.csv - we write it like this as it’s the cheese.csv file that exists in the folder data. If you ever need to check where R is looking for things, run getwd() and it will tell you where it thinks you are currently working from. 2.9 Quitting R how to quit from R successful, you don’t have to hit that save object thing all the time…. "]
]
